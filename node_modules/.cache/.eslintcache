[{"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\index.js":"1","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\reportWebVitals.js":"2","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\App.js":"3","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Login.js":"4","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijenti.js":"5","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Administracija.js":"6","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenici.js":"7","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijent.js":"8","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\NovaOsoba.js":"9","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenik.js":"10","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Racuni.js":"11","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\OnlineBankarstvo.js":"12","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Pocetana.js":"13","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\OnlineRacun.js":"14","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\AžurirajKlijenta.js":"15"},{"size":2422,"mtime":1657612833198,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1654027678310,"results":"18","hashOfConfig":"17"},{"size":140,"mtime":1654668285951,"results":"19","hashOfConfig":"17"},{"size":2991,"mtime":1656577089538,"results":"20","hashOfConfig":"17"},{"size":5034,"mtime":1657610672878,"results":"21","hashOfConfig":"17"},{"size":1409,"mtime":1657613177798,"results":"22","hashOfConfig":"17"},{"size":2803,"mtime":1657610726653,"results":"23","hashOfConfig":"17"},{"size":17190,"mtime":1657613858145,"results":"24","hashOfConfig":"17"},{"size":7062,"mtime":1657610707700,"results":"25","hashOfConfig":"17"},{"size":2230,"mtime":1657610732185,"results":"26","hashOfConfig":"17"},{"size":8904,"mtime":1657610721819,"results":"27","hashOfConfig":"17"},{"size":2144,"mtime":1657611389674,"results":"28","hashOfConfig":"17"},{"size":1081,"mtime":1657197977700,"results":"29","hashOfConfig":"17"},{"size":10648,"mtime":1657611397764,"results":"30","hashOfConfig":"17"},{"size":5203,"mtime":1657610698380,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"l605c6",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"35"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"35"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"35"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"35"},"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\index.js",[],[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\reportWebVitals.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\App.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Login.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijenti.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Administracija.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenici.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijent.js",["85","86","87","88","89","90","91","92","93","94","95"],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\NovaOsoba.js",["96","97","98","99","100","101"],[],"import React from 'react';\r\nimport {useState} from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport $ from 'jquery';\r\n\r\nfunction NoviKlijent(){\r\n\r\n    const [inputs, setInputs] = useState({});\r\n    const navigate = useNavigate();\r\n    const { IdOsoba } = useParams();\r\n\r\n    var requestId;\r\n    var route;\r\n    var klijent=false;\r\n    if(IdOsoba=='klijent'){\r\n        requestId='Upisi_novog_klijenta';\r\n        route='klijenti';\r\n        klijent=true;\r\n    }else{\r\n        requestId='Upisi_novog_zaposlenika';\r\n        route='zaposlenici';\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        var validation = true;\r\n        var reg = /^\\d+$/;\r\n        if(!($('#telefon').val().length == 10 && reg.test($('#telefon').val()))){\r\n            $('#telefon').attr('class','form-control is-invalid');\r\n            validation=false; \r\n        }else{\r\n            $('#telefon').attr('class','form-control is-valid');\r\n        }\r\n        if(!ProvjeraOIBa(inputs.OIB || 0)){\r\n            $('#oib').attr('class','form-control is-invalid');\r\n            validation=false; \r\n        }else{\r\n            $('#oib').attr('class','form-control is-valid');\r\n        }\r\n        if(!validation)return;\r\n        if(!window.confirm(\"Želite li dodati novu osobu?\")){\r\n            return;\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: requestId,\r\n                OIB: inputs.OIB,\r\n                Ime: inputs.Ime,\r\n                Prezime: inputs.Prezime,\r\n                Adresa: inputs.Adresa,\r\n                Telefon: inputs.Telefon,\r\n                Spol: inputs.Spol,\r\n                Iznos: klijent?inputs.RacunIznos:\"\",\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            console.log(response);\r\n            navigate('/administracija/'+route);\r\n        }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n    }\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}))\r\n    }\r\n    return (\r\n        <div className='container mt-1 p-5 bg-white'>\r\n        <form className='needs-validation' noValidate>\r\n            <div>\r\n            <label>Unesite OIB:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"OIB\"\r\n            id=\"oib\"\r\n            value={inputs.OIB || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n            <div className=\"invalid-feedback mb-3\">\r\n                OIB je neispravan.\r\n            </div>\r\n            </div>\r\n            <label>Unesite Ime:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Ime\"\r\n            value={inputs.Ime || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Prezime:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Prezime\"\r\n            value={inputs.Prezime || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Adresu:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Adresa\"\r\n            value={inputs.Adresa || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Telefon:</label>\r\n            <div>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Telefon\"\r\n            id=\"telefon\"\r\n            value={inputs.Telefon || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n            <div className=\"invalid-feedback mb-3\">\r\n                Unesite ispravan broj mobitela(10 brojeva).\r\n            </div>\r\n            </div>\r\n            <label>Unesite Spol:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            id=\"spol\"\r\n            name=\"Spol\"\r\n            value={inputs.Spol || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            {klijent?<div>\r\n            <label>Unesite početni iznos računa:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"RacunIznos\"\r\n            value={inputs.RacunIznos || \"\"}\r\n            onChange={handleChange}\r\n            /></div>:\"\"\r\n            }\r\n            <button className='btn btn-success' onClick={handleSubmit}>Dodaj novog klijenta</button>\r\n        </form>\r\n        </div>);\r\n\r\n}\r\n\r\n//provjera ispravnosti oib-a\r\nfunction ProvjeraOIBa(OIB){\r\n\t// OIB ima 11 znamenaka i mora biti numeric.\r\n\tif(OIB.length!=11 && Number.isInteger(parseInt(OIB))){\r\n\t\treturn false;\r\n\t}\r\n\t// Posljednja tj. 11. znamenka je kontrolna znamenka. Dobivena  je\r\n    // izračunom  iz  prethodnih  10  znamenaka  po međunarodnoj  normi  ISO 7064 (MOD 11, 10).\r\n    // Prva znamenka zbroji se s brojem 10. U sljedećim koracima to će biti ostatak koji će se zbrajati\r\n    // s idućom znamenkom.\r\n\tvar ostatak = 10;\r\n\t// Prođi kroz sve znamenke, osim zadnje.\r\n\tfor(var i=0; i<10;i++){\r\n\t\t// Dohvati trenutni znak iz OIBa i castaj ga u int kako bismo mogli raditi operacije.\r\n\t\tvar ternutnaZanmenka = parseInt(OIB[i]);\r\n\t\t// 1. Prva znamenka zbroji se s brojem 10, a svaka sljedeća s ostatkom u prethodnom koraku.\r\n\t\tvar zbroj = ternutnaZanmenka + ostatak;\r\n\t\t// 2. Dobiveni  zbroj  cjelobrojno  (s  ostatkom)  podijeli  se  brojem  10;  ako  je  dobiveni\r\n        // ostatak 0 zamijeni se brojem 10 (ovaj broj je tzv. međuostatak)\r\n\t\tvar meduOstatak = zbroj % 10;\r\n\t\tif(meduOstatak==0){\r\n\t\t\tmeduOstatak=10;\r\n\t\t}\r\n\t\t// 3. Dobiveni međuostatak pomnoži se brojem 2\r\n\t\tvar umnozak=meduOstatak*2;\r\n\t\t// 4. Dobiveni  umnožak  cjelobrojno  (s  ostatkom)  podijeli se  brojem  11;  ovaj  ostatak\r\n        // matematički nikako ne može biti 0 jer je rezultat prethodnog koraka uvijek paran broj\r\n\t\tostatak = umnozak % 11;\r\n\t\t// 5. Slijedeća znamenka zbroji se s ostatkom u prethodnom koraku...\r\n        // 6. Ponavljaju se koraci 2, 3, 4 i 5  dok se ne potroše sve znamenke...\r\n\t}\r\n\tvar kontrolnaZnamenka;\r\n\t// 7. Razlika izmeñu broja 11 i ostatka u zadnjem koraku je kontrolna znamenka.\r\n    // Ako je ostatak 1 kontrolna znamenka je 0 (11 1=10, a 10 ima dvije znamenke)\r\n\tif(ostatak==1){\r\n\t\tkontrolnaZnamenka=0;\r\n\t}else{\r\n\t\tkontrolnaZnamenka=11-ostatak;\r\n\t}\r\n\t// Provjeri dali kontrolne znamenka odgovara onoj u OIBu\r\n\tif(parseInt(OIB[10])==kontrolnaZnamenka){\r\n\t\treturn true;\r\n\t}\r\n\t// Ako smo došli tu, kontrola nije prošla.\r\n\treturn false;\r\n}\r\nexport default NoviKlijent;","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenik.js",["102"],[],"import { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction Zaposlenik(){\r\n\r\n    const [data, setData] = useState(null);\r\n    const { ZaposlenikID } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Ucitaj_podatke_zaposlenika',\r\n                ZaposlenikID: ZaposlenikID\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            setData(response.data);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n        }, []);\r\n\r\n    const handleClickDelete = (event) => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Obrisi_zaposlenika',\r\n                Sifra: data.Sifra\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n        \r\n            navigate('/administracija/zaposlenici');\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n    }\r\n\r\n    if(data){\r\n    return(\r\n        <div className=\"container text-center mt-1 p-5 col-sm-12 col-md-8 bg-white\">\r\n            <h1 className=\"display-4\">{data.Ime +\" \"+ data.Prezime}</h1>\r\n            <p className=\"lead\">{data.OIB}</p>\r\n            <p className=\"lead\">{data.Sifra}</p>\r\n            <hr></hr>\r\n            <button className=\"btn btn-success m-3\">Registracija za online bankarstvo</button>\r\n            <button className=\"btn btn-danger m-3\" onClick={handleClickDelete}>Obriši zaposlenika</button>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Zaposlenik;","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Racuni.js",["103","104","105","106","107"],[],"import axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToolkitProvider, {Search} from 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit';\r\nimport $ from 'jquery';\r\n\r\nfunction Racuni(){\r\n    const [tableData, setTableData]= useState(null);\r\n    const { SearchBar } = Search;\r\n    const [showTransakcija, setShowTransakcija]= useState(false);\r\n    const [newTransakcija, setNewTransakcija]= useState(false);\r\n    const [inputs, setInputs] = useState({\"Vrsta\":\"Uplata\"});\r\n    const [transactionData, setTransactionData]= useState(null);\r\n    const sifraBankara = localStorage.getItem('Sifra');\r\n    const [sifraRacuna, setSifraRacuna]= useState(null);\r\n\r\n    const header = [\r\n        { text: 'Šifra', dataField: 'IdRacuna', sort: true },\r\n        { text: 'OIB', dataField: 'oKlijent.OIB', sort: true },\r\n        { text: 'Ime klijenta', dataField: 'oKlijent.Ime', sort: true },\r\n        { text: 'Prezime klijenta', dataField: 'oKlijent.Prezime', sort: true },\r\n        { text: 'Adresa klijenta', dataField: 'oKlijent.Adresa', sort: true },\r\n        { text: 'Saldo', dataField: 'Stanje', sort: true }\r\n      ];\r\n      const headerTransakcije = [\r\n        { text: 'Šifra', dataField: 'Sifra', sort: true },\r\n        { text: 'šifra bankara', dataField: 'Bankar.Sifra', sort: true },\r\n        { text: 'Vrsta', dataField: 'Vrsta', sort: true },\r\n        { text: 'Datum', dataField: 'Datum', sort: true },\r\n        { text: 'Iznos', dataField: 'Iznos', sort: true },\r\n        { text: 'Trenutno stanje', dataField: 'TrenutnoStanje', sort: true },\r\n        { text: 'Platitelj', dataField: 'Platitelj', sort: true },\r\n        { text: 'Opis', dataField: 'Opis', sort: true },\r\n        { text: 'Poziv na broj', dataField: 'PozivNaBroj', sort: true },\r\n      ];\r\n    useEffect(() => {\r\n      UcitajRacune();\r\n\r\n    },[]);\r\n    async function UcitajRacune(){\r\n      axios({\r\n        method: 'post',\r\n        url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n        data: {\r\n            RequestId: 'Ucitaj_racune',\r\n        },\r\n        headers: { \r\n            \"Content-Type\": \"multipart/form-data\",\r\n        } ,\r\n    }).then(function (response) {\r\n        //handle success\r\n        console.log(response.data);\r\n        setTableData(response.data);\r\n      }).catch(function (response) {\r\n        //handle error\r\n        console.log(response);\r\n      });\r\n    }\r\n\r\n    if(!tableData)return;\r\n    if(tableData.length==0)return;\r\n\r\n    const modalTansactionNewOpen = (event) => {\r\n      setInputs({\"Vrsta\": \"Uplata\"});\r\n      setNewTransakcija(true);\r\n    }\r\n    const modalTansactionNewClose = (event) => {\r\n        setNewTransakcija(false);\r\n    }\r\n    const modalTansactionViewOpen=(event)=>{\r\n        setTransactionData(tableData.find(x => x.IdRacuna==sifraRacuna).loTransakcije);\r\n        setShowTransakcija(true);\r\n    }\r\n    const modalTansactionViewClose = (event) => {\r\n        setShowTransakcija(false);\r\n    }\r\n    const expandRow = {\r\n        renderer: (row) => (\r\n          <div>\r\n            <button className=\"btn btn-success m-3\" onClick={modalTansactionViewOpen} onMouseUp={setSifraRacuna(row.IdRacuna)}>Vidi transakcije</button >\r\n            <button className=\"btn btn-success m-3\" onClick={modalTansactionNewOpen} onMouseUp={setSifraRacuna(row.IdRacuna)}>Nova transakcija</button>\r\n          </div>\r\n        ),\r\n        onlyOneExpanding: true\r\n      };\r\n\r\n    const handleChange = (event) => {\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n      setInputs(values => ({...values, [name]: value}));\r\n    }\r\n    function ClickIzvrsiTransakciju (){\r\n      if(sifraRacuna.length==0 || sifraBankara.length==0){alert(\"Greška u programu sa šiframa\"); return;}\r\n      if(parseFloat(inputs.Iznos)<0 || parseFloat(inputs.Iznos)>parseFloat(tableData.Stanje)){\r\n        $('#Iznos').attr('class','form-control is-invalid');\r\n        return;\r\n    }else{\r\n        $('#Iznos').attr('class','form-control is-valid');\r\n    }\r\n      if(!window.confirm(\"Želite li izvršiti transakciju?\")){\r\n        return;\r\n    }\r\n      console.log(sifraRacuna+\" \"+sifraBankara+\" \"+inputs.Vrsta+inputs.Opis+inputs.PozivNaBroj+inputs.ImePlatitelja);\r\n      axios({\r\n          method: 'post',\r\n          url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n          data: {\r\n              RequestId: 'Dodaj_Transakciju',\r\n              SifraRacuna: sifraRacuna,\r\n              SifraBankara: sifraBankara,\r\n              Vrsta:inputs.Vrsta,\r\n              Opis: inputs.Opis,\r\n              PozivNaBroj: inputs.PozivNaBroj,\r\n              ImePlatitelja:inputs.ImePlatitelja,\r\n              Iznos: inputs.Vrsta==\"Uplata\"?inputs.Iznos:-inputs.Iznos\r\n          },\r\n          headers: { \r\n              \"Content-Type\": \"multipart/form-data\",\r\n          } ,\r\n      }).then(function (response) {\r\n          //handle success\r\n          console.log(response);\r\n          setNewTransakcija(false);\r\n          setTableData([]);\r\n          UcitajRacune();\r\n        \r\n      }).catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n      }); \r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"container mt-1 p-5 col-sm-12 col-md-8 bg-white\">\r\n            <ToolkitProvider\r\n                keyField=\"IdRacuna\"\r\n                data={ tableData }\r\n                columns={ header }\r\n                search> \r\n                {\r\n                  props => (\r\n                <div className=\"container wrapper\">\r\n                    <SearchBar { ...props.searchProps } srText=\"Pretraživanje tablice\" />\r\n                    <div className=\"text-center mt-3\">\r\n                      <BootstrapTable { ...props.baseProps } striped hover pagination={ paginationFactory()} expandRow={expandRow} />\r\n                    </div>\r\n                 </div>\r\n                  )\r\n                }   \r\n            </ToolkitProvider>\r\n            <Modal size=\"xl\" show={showTransakcija} onHide={modalTansactionViewClose}> \r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Pregled Transakcija</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className=\"container wrapper\">\r\n                  <BootstrapTable keyField=\"Sifra\" data={ transactionData } columns={ headerTransakcije } striped hover pagination={ paginationFactory() } />\r\n              </div>\r\n          </Modal.Body>\r\n          </Modal >\r\n\r\n          <Modal show={newTransakcija} onHide={modalTansactionNewClose}> \r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Nova Transakcija</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <form>\r\n              <label className=\"mb-3\">Šifra računa: </label><br />\r\n              <label>Ime platitelja:</label>\r\n              <input\r\n              className=\"form-control mb-3\"\r\n              type=\"text\"\r\n              name=\"ImePlatitelja\"\r\n              value={inputs.ImePlatitelja || \"\"}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Vrsta:</label>\r\n              <select name=\"Vrsta\" className=\"form-control\" onChange={handleChange}>\r\n                  <option value=\"Uplata\">Uplata</option>\r\n                  <option value=\"Isplata\">Isplata</option>\r\n              </select><br />\r\n              <label>Iznos:</label>\r\n              <input\r\n              className=\"form-control mb-3\"\r\n              type=\"number\"\r\n              name=\"Iznos\"\r\n              id=\"Iznos\"\r\n              value={inputs.Iznos||\"\"}\r\n              onChange={handleChange}\r\n              />\r\n               <div className=\"invalid-feedback mb-3\">\r\n                  Nemože se uplatit više nego što ima na računu novaca\r\n                </div>\r\n              <label>Poziv na broj:</label>\r\n              <input\r\n              className=\"form-control mb-3 col\"\r\n              type=\"text\"\r\n              name=\"PozivNaBroj\"\r\n              value={inputs.PozivNaBroj||\"\"}\r\n              onChange={handleChange}\r\n              />\r\n              <label>Opis:</label>\r\n              <input\r\n              className=\"form-control mb-3\"\r\n              type=\"text\"\r\n              name=\"Opis\"\r\n              value={inputs.Opis||\"\"}\r\n              onChange={handleChange}\r\n              /> \r\n              </form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={modalTansactionNewClose}>Close</Button>\r\n              <Button variant=\"primary\" onClick={()=>ClickIzvrsiTransakciju()}>Izvrši transakciju</Button>\r\n          </Modal.Footer>\r\n          </Modal >\r\n        </div>\r\n        </>\r\n    );\r\n  }\r\n\r\nexport default Racuni;\r\n\r\n/*\r\n\r\n\r\n*/","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\OnlineBankarstvo.js",["108","109"],[],"import { Link, Outlet, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nfunction OnlineBankarstvo(){\r\n    \r\n    const [data, setData]= useState(null);\r\n    const sifraKlijenta = localStorage.getItem('Sifra');\r\n    const {navigate}=useNavigate();\r\n\r\n    const handleClick=(event)=>{\r\n       localStorage.removeItem('Sifra');\r\n    }\r\n    \r\n    useEffect(() => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Ucitaj_racune_klijenta',\r\n                Sifra: sifraKlijenta\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            setData(response.data);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n    }, []);\r\n\r\n\r\n    if(localStorage.getItem('Sifra')){\r\n        if(!data)return;\r\n        console.log(data);\r\n        var i = 0;\r\n        function LoadNav(){\r\n            return(\r\n            data.map((x)=>(<li id=\"x.IdRacuna\" className=\"nav-item\">\r\n                        <Link className='btn text-white' to={\"/OnlineBankarstvo/racun/\"+x.IdRacuna}><button className='btn text-white'  >Racni {i=i+1}</button></Link>\r\n                    </li>) )\r\n                    );\r\n        }\r\n        return(\r\n            <>\r\n            <nav className='navbar navbar-expand-md justify-content-between'>\r\n                <ul className=\"navbar-nav\">\r\n                    <LoadNav />\r\n                </ul>\r\n                <div className=\"navbar-nav ml-auto\">\r\n                    <Link className='btn text-white' to=\"/Login\" onClick={handleClick} >Odjava</Link>       \r\n                </div>    \r\n            </nav>\r\n            <Outlet />\r\n            </>\r\n        );\r\n    }else{\r\n        return(\r\n            <Navigate to=\"/login\" />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OnlineBankarstvo;","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Pocetana.js",["110","111","112","113"],[],"import { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\n\r\nfunction Pocetna(){\r\n    const sifraKlijenta = localStorage.getItem('Sifra');\r\n    const navigation = useNavigate();\r\n\r\n    useEffect(() => {\r\n        UcitajRacune();\r\n        \r\n    },[]);\r\n\r\n    async function UcitajRacune(){\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Ucitaj_racune_klijenta',\r\n                Sifra: sifraKlijenta\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data.loTransakcije);\r\n            navigation(\"racun/\"+response.data[0].IdRacuna);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n    }\r\n}\r\nexport default Pocetna","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\OnlineRacun.js",["114","115","116"],[],"import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport axios from 'axios';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport $ from 'jquery';\r\n\r\n\r\nfunction Transakcije(){\r\n    const [data, setData] = useState(null);\r\n    const { IdRacun } = useParams();\r\n\r\n    useEffect(() => {\r\n        UcitajRacune();\r\n    },[IdRacun]);\r\n\r\n\r\n    async function UcitajRacune(){\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Ucitaj_racun',\r\n                Sifra: IdRacun\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data.loTransakcije);\r\n            setData(response.data.loTransakcije);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n    }\r\n    if(!data) return;\r\n    \r\n    return(\r\n        data.map((x)=>\r\n        (<div className={`card border border-${x.Iznos<0?\"danger\":\"success\"} m-3`}\r\n        >\r\n        <div className=\"card-header\">{x.Datum}</div>\r\n        <div className=\"card-body row\">\r\n            <div className=\"col-xs-12 col-md-2\">\r\n                <h5 className={`text-${x.Iznos<0?\"danger\":\"success\"}`}>{x.Iznos} </h5>\r\n                <h6>{x.TrenutnoStanje}</h6>\r\n            </div>\r\n            <div className=\"card-text col\">\r\n            {x.Platitelj+\" \"+ x.Vrsta+\" \"+ x.Opis+ \"(\"+ x.Sifra+\")\"} \r\n            </div>\r\n        </div>\r\n        </div>)));\r\n}\r\nfunction OnlineRacun(){\r\n    const [newTransakcija, setNewTransakcija]= useState(false);\r\n    const [inputs, setInputs] = useState({\"Vrsta\":\"Uplata\", \"Iznos\":0});\r\n    const [racun, setRacun]= useState(null);\r\n    const { IdRacun } = useParams();\r\n    useEffect(() => {\r\n        UcitajRacune();\r\n        \r\n    },[IdRacun]);\r\n    async function UcitajRacune(){\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Ucitaj_racun',\r\n                Sifra: IdRacun\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            setRacun(response.data);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n    }\r\n    if(!racun) return;\r\n\r\n    const modalTansactionNewOpen = (event) => {\r\n        setInputs({\"Vrsta\": \"Uplata\", \"Iznos\":0});\r\n        setNewTransakcija(true);\r\n    }\r\n    const modalTansactionNewClose = (event) => {\r\n        setNewTransakcija(false);\r\n    }\r\n    function ProvjeraTransakcije(){\r\n        \r\n        var valid=true;\r\n        \r\n        if(parseFloat(inputs.Iznos)<0 || parseFloat(inputs.Iznos)>parseFloat(racun.Stanje)){\r\n            valid=false;\r\n            $('#Iznos').attr('class','form-control is-invalid');\r\n        }else{\r\n            $('#Iznos').attr('class','form-control is-valid');\r\n        }\r\n       /* axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Provjera_racuna',\r\n                Sifra: inputs.racunZaPrebacit||\"\"\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data)\r\n            if(response.data=='0'){\r\n                $('#racun').attr('class','form-control is-invalid');\r\n                valid = 0;\r\n            }else{\r\n                $('#racun').attr('class','form-control is-valid');\r\n            }\r\n            setState(response.data);\r\n        }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n        if(!state)return;\r\n            console.log(valid);*/\r\n            return valid;\r\n        \r\n        \r\n        \r\n    }\r\n    function ClickIzvrsiTransakciju (){\r\n        if(ProvjeraTransakcije()==0){\r\n            return;\r\n        }\r\n        if(!window.confirm(\"Želite li izvršiti transakciju?\")){\r\n            return;\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Dodaj_Transakciju',\r\n                SifraRacuna: IdRacun,\r\n                SifraBankara: \"online\",\r\n                Vrsta:\"Isplata\",\r\n                Opis: inputs.Opis,\r\n                PozivNaBroj: inputs.PozivNaBroj,\r\n                ImePlatitelja:racun.oKlijent.Ime+\" \"+racun.oKlijent.Prezime,\r\n                Iznos: -inputs.Iznos,\r\n                TrenutnoStanje: parseFloat(racun.Stanje)-parseFloat(inputs.Iznos)\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response);\r\n          \r\n        }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        }); \r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Dodaj_Transakciju',\r\n                SifraRacuna: inputs.racunZaPrebacit,\r\n                SifraBankara: \"online\",\r\n                Vrsta:\"Uplata\",\r\n                Opis: inputs.Opis,\r\n                PozivNaBroj: inputs.PozivNaBroj,\r\n                ImePlatitelja:inputs.ImePlatitelja,\r\n                Iznos: inputs.Iznos,\r\n                TrenutnoStanje: parseFloat(racun.Stanje)+parseFloat(inputs.Iznos)\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response);\r\n            setNewTransakcija(false);\r\n            window.location.reload();\r\n        }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        }); \r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}));\r\n    }\r\n    return(\r\n        <div className=\"container text-center mt-1 p-5 col-xl-8 col-md-8 col-xs-12 bg-white\">\r\n            <h4 id=\"idRacuna\"className=\"display-4\">Računa: {racun.IdRacuna}</h4>\r\n            <h5 className=\"lead\">Saldo: {racun.Stanje}</h5>\r\n            <button className=\"btn btn-success m-3\" onClick={modalTansactionNewOpen}>Nova transakcija</button>\r\n            <hr></hr>\r\n            <Transakcije />\r\n\r\n            <Modal show={newTransakcija} onHide={modalTansactionNewClose}> \r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Nova Transakcija</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form>\r\n                    <label className=\"mb-3\">Šifra računa:{IdRacun} </label><br />\r\n                    <div>\r\n                        <label>Prebaci na račun:</label>\r\n                        <input\r\n                        className=\"form-control mb-3\"\r\n                        type=\"text\"\r\n                        id=\"racun\"\r\n                        name=\"racunZaPrebacit\"\r\n                        value={inputs.racunZaPrebacit || \"\"}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <div className=\"invalid-feedback mb-3\">\r\n                        Uneseni račun nepostoji\r\n                        </div>\r\n                    </div>\r\n                    <label>Ime platitelja:</label>\r\n                    <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    name=\"ImePlatitelja\"\r\n                    value={racun.oKlijent.Ime+\" \"+racun.oKlijent.Prezime}\r\n                    readOnly\r\n                    />\r\n                    <div>\r\n                        <label>Iznos:</label>\r\n                        <input\r\n                        className=\"form-control mb-3\"\r\n                        type=\"number\"\r\n                        id=\"Iznos\"\r\n                        name=\"Iznos\"\r\n                        value={inputs.Iznos||0}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <div className=\"invalid-feedback mb-3\">\r\n                        Nemože se uplatit više nego što ima na računu novaca\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Poziv na broj:</label>\r\n                        <input\r\n                        className=\"form-control mb-3 col\"\r\n                        type=\"text\"\r\n                        id=\"PozivNaBroj\"\r\n                        name=\"PozivNaBroj\"\r\n                        value={inputs.PozivNaBroj||\"\"}\r\n                        onChange={handleChange}\r\n                        />\r\n                         <div className=\"invalid-feedback mb-3\">\r\n                        Poziv na broj može biti ili prazan ili 12 znamenki\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Opis:</label>\r\n                        <input\r\n                        className=\"form-control mb-3\"\r\n                        type=\"text\"\r\n                        id=\"Opis\"\r\n                        name=\"Opis\"\r\n                        value={inputs.Opis||\"\"}\r\n                        onChange={handleChange}\r\n                        /> \r\n                        <div className=\"invalid-feedback mb-3\">\r\n                        Opis nemože biti duži od 50 znakova\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={modalTansactionNewClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={()=>ClickIzvrsiTransakciju()}>Izvrši transakciju</Button>\r\n                </Modal.Footer>\r\n            </Modal >\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default OnlineRacun;","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\AžurirajKlijenta.js",["117","118"],[],"import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport $ from 'jquery';\r\n\r\nfunction AzurirajKlijenta(){\r\n\r\n    const [inputs, setInputs] = useState({});\r\n    const navigate = useNavigate();\r\n    const { KlijentID } = useParams();\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        UcitajKlijenta();\r\n    },[]);\r\n\r\n    async function UcitajKlijenta(){\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Ucitaj_podatke_klijenta',\r\n                KlijentID: KlijentID\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            setData(response.data);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n        }\r\n    \r\n    if(data){\r\n   \r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        var validation = true;\r\n        var reg = /^\\d+$/;\r\n        if(!($('#telefon').val().length == 10 && reg.test($('#telefon').val()))){\r\n            $('#telefon').attr('class','form-control is-invalid');\r\n            validation=false; \r\n        }else{\r\n            $('#telefon').attr('class','form-control is-valid');\r\n        }\r\n        if(!validation)return;\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: \"Azuriraj_klijenta\",\r\n                Ime: inputs.Ime ||data.Ime,\r\n                Prezime: inputs.Prezime ||data.Prezime,\r\n                Adresa: inputs.Adresa ||data.Adresa,\r\n                Telefon: inputs.Telefon||data.Telefon,\r\n                Spol: inputs.Spol||data.Spol,\r\n                KlijentID: KlijentID\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            console.log(response);\r\n            navigate('/administracija/klijenti');\r\n        }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n    }\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}))\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-1 p-5 bg-white'>\r\n        <form className='needs-validation' noValidate>\r\n            <div>\r\n            <label>Unesite OIB:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"OIB\"\r\n            id=\"oib\"\r\n            value={inputs.OIB || data.OIB}\r\n            onChange={handleChange}\r\n            required\r\n            readOnly\r\n            />\r\n            <div className=\"invalid-feedback mb-3\">\r\n                OIB je neispravan.\r\n            </div>\r\n            </div>\r\n            <label>Unesite novo Ime:staro ime({data.Ime}) </label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Ime\"\r\n            placeholder={data.Ime}\r\n            value={inputs.Ime || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Prezime:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Prezime\"\r\n            placeholder={data.Prezime}\r\n            value={inputs.Prezime || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Adresu:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Adresa\"\r\n            placeholder={data.Adresa}\r\n            value={inputs.Adresa || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Telefon:</label>\r\n            <div>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Telefon\"\r\n            id=\"telefon\"\r\n            placeholder={data.Telefon}\r\n            value={inputs.Telefon || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n            <div className=\"invalid-feedback mb-3\">\r\n                Unesite ispravan broj mobitela(10 brojeva).\r\n            </div>\r\n            </div>\r\n            <label>Unesite Spol:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            id=\"spol\"\r\n            name=\"Spol\"\r\n            placeholder={data.Spol}\r\n            value={inputs.Spol || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <button className='btn btn-success' onClick={handleSubmit}>Dodaj novog klijenta</button>\r\n        </form>\r\n        </div>);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AzurirajKlijenta;",{"ruleId":"119","severity":1,"message":"120","line":41,"column":12,"nodeType":"121","endLine":41,"endColumn":14,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":229,"column":7,"nodeType":"121","endLine":229,"endColumn":9,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":232,"column":24,"nodeType":"127","messageId":"128","endLine":232,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":261,"column":24,"nodeType":"127","messageId":"128","endLine":261,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":274,"column":58,"nodeType":"127","messageId":"128","endLine":274,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":334,"column":30,"nodeType":"127","messageId":"128","endLine":334,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":334,"column":56,"nodeType":"127","messageId":"128","endLine":334,"endColumn":58},{"ruleId":"125","severity":1,"message":"126","line":344,"column":32,"nodeType":"127","messageId":"128","endLine":344,"endColumn":34},{"ruleId":"129","severity":1,"message":"130","line":346,"column":13,"nodeType":"131","messageId":"132","endLine":346,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":346,"column":39,"nodeType":"127","messageId":"128","endLine":346,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":348,"column":28,"nodeType":"127","messageId":"128","endLine":348,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":16,"column":15,"nodeType":"127","messageId":"128","endLine":16,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":28,"column":41,"nodeType":"127","messageId":"128","endLine":28,"endColumn":43},{"ruleId":"125","severity":1,"message":"133","line":160,"column":15,"nodeType":"127","messageId":"128","endLine":160,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":177,"column":17,"nodeType":"127","messageId":"128","endLine":177,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":191,"column":12,"nodeType":"127","messageId":"128","endLine":191,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":197,"column":22,"nodeType":"127","messageId":"128","endLine":197,"endColumn":24},{"ruleId":"119","severity":1,"message":"134","line":31,"column":12,"nodeType":"121","endLine":31,"endColumn":14,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"126","line":64,"column":24,"nodeType":"127","messageId":"128","endLine":64,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":74,"column":58,"nodeType":"127","messageId":"128","endLine":74,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":96,"column":28,"nodeType":"127","messageId":"128","endLine":96,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":96,"column":54,"nodeType":"127","messageId":"128","endLine":96,"endColumn":56},{"ruleId":"125","severity":1,"message":"126","line":118,"column":34,"nodeType":"127","messageId":"128","endLine":118,"endColumn":36},{"ruleId":"129","severity":1,"message":"136","line":9,"column":12,"nodeType":"131","messageId":"132","endLine":9,"endColumn":20},{"ruleId":"119","severity":1,"message":"137","line":34,"column":8,"nodeType":"121","endLine":34,"endColumn":10,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"139","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":19},{"ruleId":"129","severity":1,"message":"140","line":2,"column":21,"nodeType":"131","messageId":"132","endLine":2,"endColumn":29},{"ruleId":"129","severity":1,"message":"141","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":13,"column":7,"nodeType":"121","endLine":13,"endColumn":9,"suggestions":"142"},{"ruleId":"119","severity":1,"message":"123","line":16,"column":7,"nodeType":"121","endLine":16,"endColumn":16,"suggestions":"143"},{"ruleId":"119","severity":1,"message":"123","line":65,"column":7,"nodeType":"121","endLine":65,"endColumn":16,"suggestions":"144"},{"ruleId":"125","severity":1,"message":"126","line":137,"column":33,"nodeType":"127","messageId":"128","endLine":137,"endColumn":35},{"ruleId":"119","severity":1,"message":"145","line":16,"column":7,"nodeType":"121","endLine":16,"endColumn":9,"suggestions":"146"},{"ruleId":"125","severity":1,"message":"126","line":45,"column":41,"nodeType":"127","messageId":"128","endLine":45,"endColumn":43},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'KlijentID'. Either include it or remove the dependency array.","ArrayExpression",["147"],"React Hook useEffect has a missing dependency: 'UcitajRacune'. Either include it or remove the dependency array.",["148"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'ImePlatitelja' is assigned a value but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'ZaposlenikID'. Either include it or remove the dependency array.",["149"],"'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sifraKlijenta'. Either include it or remove the dependency array.",["150"],"'useParams' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.",["151"],["152"],["153"],"React Hook useEffect has a missing dependency: 'UcitajKlijenta'. Either include it or remove the dependency array.",["154"],{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"157","fix":"163"},{"desc":"164","fix":"165"},{"desc":"164","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [KlijentID]",{"range":"169","text":"170"},"Update the dependencies array to be: [UcitajRacune]",{"range":"171","text":"172"},"Update the dependencies array to be: [ZaposlenikID]",{"range":"173","text":"174"},"Update the dependencies array to be: [sifraKlijenta]",{"range":"175","text":"176"},{"range":"177","text":"172"},"Update the dependencies array to be: [IdRacun, UcitajRacune]",{"range":"178","text":"179"},{"range":"180","text":"179"},"Update the dependencies array to be: [UcitajKlijenta]",{"range":"181","text":"182"},[1449,1451],"[KlijentID]",[8550,8552],"[UcitajRacune]",[954,956],"[ZaposlenikID]",[1064,1066],"[sifraKlijenta]",[348,350],[432,441],"[IdRacun, UcitajRacune]",[2069,2078],[446,448],"[UcitajKlijenta]"]
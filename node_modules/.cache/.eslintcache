[{"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\index.js":"1","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\reportWebVitals.js":"2","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\App.js":"3","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Login.js":"4","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijenti.js":"5","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Administracija.js":"6","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenici.js":"7","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijent.js":"8","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\NovaOsoba.js":"9","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenik.js":"10","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Racuni.js":"11"},{"size":1901,"mtime":1656336170496,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1654027678310,"results":"14","hashOfConfig":"13"},{"size":140,"mtime":1654668285951,"results":"15","hashOfConfig":"13"},{"size":2103,"mtime":1656500794084,"results":"16","hashOfConfig":"13"},{"size":5307,"mtime":1656495226019,"results":"17","hashOfConfig":"13"},{"size":1059,"mtime":1656494413868,"results":"18","hashOfConfig":"13"},{"size":2741,"mtime":1655062063094,"results":"19","hashOfConfig":"13"},{"size":11020,"mtime":1656503837297,"results":"20","hashOfConfig":"13"},{"size":6504,"mtime":1654723789695,"results":"21","hashOfConfig":"13"},{"size":2198,"mtime":1655066799483,"results":"22","hashOfConfig":"13"},{"size":2654,"mtime":1656406847311,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l605c6",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\index.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\reportWebVitals.js",[],[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\App.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Login.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijenti.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Administracija.js",["60","61"],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenici.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijent.js",["62","63","64","65","66","67"],[],"import { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\n\r\nfunction Klijent(){\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [value, setValue]= useState(0);\r\n    const [data, setData] = useState(null);\r\n    const { KlijentID } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Ucitaj_podatke_klijenta',\r\n                KlijentID: KlijentID\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            setData(response.data);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n        }, []);\r\n\r\n    const modalOpen = (event) => {\r\n        setShow(true);\r\n    }\r\n    const modalClose = (event) => {\r\n        setShow(false);\r\n    }\r\n    const handleClickDelete = (event) => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Obrisi_klijenta',\r\n                Sifra: data.Sifra\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            \r\n            navigate('/administracija/klijenti');\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n    }\r\n    const handleClickNoviRacun = (event) => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Dodaj_racun',\r\n                Value: value,\r\n                Sifra: data.Sifra\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n          //handle success\r\n          console.log(response.data);\r\n          window.location.reload();\r\n        }).catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n        });\r\n    }\r\n\r\n    if(data){\r\n    return(\r\n        <div className=\"container text-center mt-5\">\r\n            <h1 className=\"display-4\">{data.Ime +\" \"+ data.Prezime}</h1>\r\n            <p className=\"lead\">{data.OIB}</p>\r\n            <hr></hr>\r\n            <button className=\"btn btn-success m-3\" onClick={modalOpen}>Novi Račun</button>\r\n            <button className=\"btn btn-success m-3\">Online bankarstvo</button>\r\n            <button className=\"btn btn-danger m-3\" onClick={handleClickDelete}>Obriši Klijenta</button>\r\n            <TableRacuni sifra={data.Sifra} />\r\n            <Modal show={show} onHide={modalClose}> \r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>Novi Račun</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <label>Početna Uplata:</label>\r\n                    <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    name=\"Ime\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={modalClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={handleClickNoviRacun}>Napravi račun</Button>\r\n                </Modal.Footer>\r\n            </Modal >\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\n///777777777777777777777777777777777777777777777777777777777777777777777\r\nfunction TableRacuni(props){\r\n\r\n    const [showTransakcija, setShowTransakcija]= useState(false);\r\n    const [tableData, setTableData]= useState(null);\r\n    const [sifraRacuna, setSifraRacuna]= useState(null);\r\n    const [inputs, setInputs] = useState({\"Vrsta\":\"Uplata\"});\r\n    const sifraBankara = localStorage.getItem('Sifra')\r\n    const header = [\r\n        { text: 'Šifra', dataField: 'IdRacuna', sort: true },\r\n        { text: 'Stanje', dataField: 'Stanje', sort: true },\r\n        { text: 'Datum otvaranja', dataField: 'DatumOtvaranja', sort: true },\r\n      ];\r\n    useEffect(() => {\r\n        UcitajRacune();\r\n\r\n    },[]);\r\n\r\n    async function UcitajRacune(){\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Ucitaj_racune_klijenta',\r\n                Sifra: props.sifra\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            setTableData(response.data);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n    }\r\n    if(!tableData)return;\r\n    if(tableData.length==0)return;\r\n\r\n    const modalTansactionOpen = (event) => {\r\n        setShowTransakcija(true);\r\n    }\r\n    const modalTansactionClose = (event) => {\r\n        setShowTransakcija(false);\r\n    }\r\n\r\n    async function handleClickDeleteAccount(sifraRacuna){\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Obrisi_racun',\r\n                Sifra: sifraRacuna\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            //window.location.reload();\r\n        }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n        });\r\n        setTableData([]);\r\n        UcitajRacune();\r\n    }\r\n\r\n    const expandRow = {\r\n        renderer: (row) => (\r\n            <div>\r\n                <button className=\"btn btn-success m-3\">Vidi transakcije</button>\r\n                <button className=\"btn btn-success m-3\" onClick={modalTansactionOpen} onMouseUp={setSifraRacuna(row.IdRacuna)}>Nova transakcija</button>\r\n                <button className=\"btn btn-danger m-3\" onClick={()=>handleClickDeleteAccount(row.IdRacuna)}>Obriši račun</button>\r\n            </div>\r\n        ),\r\n        onlyOneExpanding: true,\r\n        /*onExpand: (row, isExpand, rowIndex, e) => {\r\n            setSifraRacuna(row.IdRacuna);\r\n          },\r\n          showExpandColumn: true*/\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}));\r\n        console.log(value);\r\n    }\r\n    function ClickIzvrsiTransakciju (){\r\n        if(sifraRacuna.length==0 || sifraBankara==0){alert(\"Greška u programu sa šiframa\"); return;}\r\n        console.log(sifraRacuna+\" \"+sifraBankara+\" \"+inputs.Vrsta+inputs.Opis+inputs.PozivNaBroj+inputs.ImePlatitelja);\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: 'Dodaj_Transakciju',\r\n                SifraRacuna: sifraRacuna,\r\n                SifraBankara: sifraBankara,\r\n                Vrsta:inputs.Vrsta,\r\n                Opis: inputs.Opis,\r\n                PozivNaBroj: inputs.PozivNaBroj,\r\n                ImePlatitelja:inputs.ImePlatitelja,\r\n                Iznos: inputs.Vrsta==\"Uplata\"?inputs.Iznos:-inputs.Iznos\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n          //handle success\r\n          console.log(response);\r\n          setShowTransakcija(false);\r\n          alert(\"jej\");\r\n          \r\n        }).catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n        }); \r\n    }\r\n     \r\n\r\n    return(\r\n        <div className=\"container my-5\">\r\n            <div className=\"container wrapper\">\r\n                <BootstrapTable keyField=\"IdRacuna\" data={ tableData } columns={ header } striped hover pagination={ paginationFactory() } expandRow={expandRow}/>\r\n            </div>\r\n        \r\n        <Modal show={showTransakcija} onHide={modalTansactionClose}> \r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Nova Transakcija</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <form>\r\n            <label className=\"mb-3\">Šifra računa: </label><br />\r\n            <label>Ime platitelja:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"ImePlatitelja\"\r\n            value={inputs.ImePlatitelja || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Vrsta:</label>\r\n            <select name=\"Vrsta\" className=\"form-control\" onChange={handleChange}>\r\n                <option value=\"Uplata\">Uplata</option>\r\n                <option value=\"Isplata\">Isplata</option>\r\n            </select><br />\r\n            <label>Iznos:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"number\"\r\n            name=\"Iznos\"\r\n            value={inputs.Iznos||\"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Poziv na broj:</label>\r\n            <div className=\"row mx-1\">\r\n                <input\r\n                className=\"form-control mb-3 col\"\r\n                type=\"text\"\r\n                name=\"PozivNaBroj\"\r\n                value={inputs.PozivNaBroj||\"\"}\r\n                onChange={handleChange}\r\n                />\r\n                <label className=\"col pt-1\">{\"asd\"}</label>\r\n            </div><br />\r\n            <label>Opis:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Opis\"\r\n            value={inputs.Opis||\"\"}\r\n            onChange={handleChange}\r\n            /> \r\n            </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={modalTansactionClose}>Close</Button>\r\n            <Button variant=\"primary\" onClick={()=>ClickIzvrsiTransakciju()}>Izvrši transakciju</Button>\r\n        </Modal.Footer>\r\n    </Modal >\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Klijent;\r\n","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\NovaOsoba.js",["68","69","70","71","72","73"],[],"import React from 'react';\r\nimport {useState} from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport $ from 'jquery'\r\n\r\nfunction NoviKlijent(){\r\n\r\n    const [inputs, setInputs] = useState({});\r\n    const navigate = useNavigate();\r\n    const { IdOsoba } = useParams();\r\n\r\n    var requestId;\r\n    var route;\r\n    if(IdOsoba=='klijent'){\r\n        requestId='Upisi_novog_klijenta';\r\n        route='klijenti';\r\n    }else{\r\n        requestId='Upisi_novog_zaposlenika';\r\n        route='zaposlenici';\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        var validation = true;\r\n        var reg = /^\\d+$/\r\n        if(!($('#telefon').val().length == 10 && reg.test($('#telefon').val()))){\r\n            $('#telefon').attr('class','form-control is-invalid');\r\n            validation=false; \r\n        }else{\r\n            $('#telefon').attr('class','form-control is-valid');\r\n        }\r\n        if(!ProvjeraOIBa(inputs.OIB || 0)){\r\n            $('#oib').attr('class','form-control is-invalid');\r\n            validation=false; \r\n        }else{\r\n            $('#oib').attr('class','form-control is-valid');\r\n        }\r\n        if(!validation)return;\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: requestId,\r\n                OIB: inputs.OIB,\r\n                Ime: inputs.Ime,\r\n                Prezime: inputs.Prezime,\r\n                Adresa: inputs.Adresa,\r\n                Telefon: inputs.Telefon,\r\n                Spol: inputs.Spol\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            console.log(response);\r\n            navigate('/administracija/'+route);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n\r\n    }\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}))\r\n    }\r\n    return (\r\n        <div className='container mt-5'>\r\n        <form className='needs-validation' noValidate>\r\n            <div>\r\n            <label>Unesite OIB:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"OIB\"\r\n            id=\"oib\"\r\n            value={inputs.OIB || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n            <div className=\"invalid-feedback mb-3\">\r\n                OIB je neispravan.\r\n            </div>\r\n            </div>\r\n            <label>Unesite Ime:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Ime\"\r\n            value={inputs.Ime || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Prezime:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Prezime\"\r\n            value={inputs.Prezime || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Adresu:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Adresa\"\r\n            value={inputs.Adresa || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Telefon:</label>\r\n            <div>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Telefon\"\r\n            id=\"telefon\"\r\n            value={inputs.Telefon || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n            <div className=\"invalid-feedback mb-3\">\r\n                Unesite ispravan broj mobitela(10 brojeva).\r\n            </div>\r\n            </div>\r\n            <label>Unesite Spol:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Spol\"\r\n            value={inputs.Spol || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <button className='btn btn-success' onClick={handleSubmit}>Dodaj novog klijenta</button>\r\n        </form>\r\n        </div>);\r\n\r\n}\r\n\r\n//provjera ispravnosti oib-a\r\nfunction ProvjeraOIBa(OIB){\r\n\t// OIB ima 11 znamenaka i mora biti numeric.\r\n\tif(OIB.length!=11 && Number.isInteger(parseInt(OIB))){\r\n\t\treturn false;\r\n\t}\r\n\t// Posljednja tj. 11. znamenka je kontrolna znamenka. Dobivena  je\r\n    // izračunom  iz  prethodnih  10  znamenaka  po međunarodnoj  normi  ISO 7064 (MOD 11, 10).\r\n    // Prva znamenka zbroji se s brojem 10. U sljedećim koracima to će biti ostatak koji će se zbrajati\r\n    // s idućom znamenkom.\r\n\tvar ostatak = 10;\r\n\t// Prođi kroz sve znamenke, osim zadnje.\r\n\tfor(var i=0; i<10;i++){\r\n\t\t// Dohvati trenutni znak iz OIBa i castaj ga u int kako bismo mogli raditi operacije.\r\n\t\tvar ternutnaZanmenka = parseInt(OIB[i]);\r\n\t\t// 1. Prva znamenka zbroji se s brojem 10, a svaka sljedeća s ostatkom u prethodnom koraku.\r\n\t\tvar zbroj = ternutnaZanmenka + ostatak;\r\n\t\t// 2. Dobiveni  zbroj  cjelobrojno  (s  ostatkom)  podijeli  se  brojem  10;  ako  je  dobiveni\r\n        // ostatak 0 zamijeni se brojem 10 (ovaj broj je tzv. međuostatak)\r\n\t\tvar meduOstatak = zbroj % 10;\r\n\t\tif(meduOstatak==0){\r\n\t\t\tmeduOstatak=10;\r\n\t\t}\r\n\t\t// 3. Dobiveni međuostatak pomnoži se brojem 2\r\n\t\tvar umnozak=meduOstatak*2;\r\n\t\t// 4. Dobiveni  umnožak  cjelobrojno  (s  ostatkom)  podijeli se  brojem  11;  ovaj  ostatak\r\n        // matematički nikako ne može biti 0 jer je rezultat prethodnog koraka uvijek paran broj\r\n\t\tostatak = umnozak % 11;\r\n\t\t// 5. Slijedeća znamenka zbroji se s ostatkom u prethodnom koraku...\r\n        // 6. Ponavljaju se koraci 2, 3, 4 i 5  dok se ne potroše sve znamenke...\r\n\t}\r\n\tvar kontrolnaZnamenka;\r\n\t// 7. Razlika izmeñu broja 11 i ostatka u zadnjem koraku je kontrolna znamenka.\r\n    // Ako je ostatak 1 kontrolna znamenka je 0 (11 1=10, a 10 ima dvije znamenke)\r\n\tif(ostatak==1){\r\n\t\tkontrolnaZnamenka=0;\r\n\t}else{\r\n\t\tkontrolnaZnamenka=11-ostatak;\r\n\t}\r\n\t// Provjeri dali kontrolne znamenka odgovara onoj u OIBu\r\n\tif(parseInt(OIB[10])==kontrolnaZnamenka){\r\n\t\treturn true;\r\n\t}\r\n\t// Ako smo došli tu, kontrola nije prošla.\r\n\treturn false;\r\n}\r\nexport default NoviKlijent;","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenik.js",["74"],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Racuni.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":21},{"ruleId":"75","severity":1,"message":"79","line":6,"column":11,"nodeType":"77","messageId":"78","endLine":6,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":37,"column":12,"nodeType":"82","endLine":37,"endColumn":14,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":142,"column":7,"nodeType":"82","endLine":142,"endColumn":9,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":165,"column":24,"nodeType":"88","messageId":"89","endLine":165,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":219,"column":30,"nodeType":"88","messageId":"89","endLine":219,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":219,"column":49,"nodeType":"88","messageId":"89","endLine":219,"endColumn":51},{"ruleId":"86","severity":1,"message":"87","line":232,"column":36,"nodeType":"88","messageId":"89","endLine":232,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":15,"column":15,"nodeType":"88","messageId":"89","endLine":15,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":26,"column":41,"nodeType":"88","messageId":"89","endLine":26,"endColumn":43},{"ruleId":"86","severity":1,"message":"90","line":144,"column":15,"nodeType":"88","messageId":"89","endLine":144,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":161,"column":17,"nodeType":"88","messageId":"89","endLine":161,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":175,"column":12,"nodeType":"88","messageId":"89","endLine":175,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":181,"column":22,"nodeType":"88","messageId":"89","endLine":181,"endColumn":24},{"ruleId":"80","severity":1,"message":"91","line":31,"column":12,"nodeType":"82","endLine":31,"endColumn":14,"suggestions":"92"},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'KlijentID'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'UcitajRacune'. Either include it or remove the dependency array.",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'ZaposlenikID'. Either include it or remove the dependency array.",["95"],{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [KlijentID]",{"range":"102","text":"103"},"Update the dependencies array to be: [UcitajRacune]",{"range":"104","text":"105"},"Update the dependencies array to be: [ZaposlenikID]",{"range":"106","text":"107"},[1243,1245],"[KlijentID]",[4890,4892],"[UcitajRacune]",[954,956],"[ZaposlenikID]"]
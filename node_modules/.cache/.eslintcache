[{"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\index.js":"1","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\reportWebVitals.js":"2","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\App.js":"3","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Login.js":"4","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijenti.js":"5","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Administracija.js":"6","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenici.js":"7","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijent.js":"8","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\NovaOsoba.js":"9","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenik.js":"10","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Racuni.js":"11"},{"size":1905,"mtime":1655069211996,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1654027678310,"results":"14","hashOfConfig":"13"},{"size":140,"mtime":1654668285951,"results":"15","hashOfConfig":"13"},{"size":2044,"mtime":1654718013958,"results":"16","hashOfConfig":"13"},{"size":5258,"mtime":1655071700934,"results":"17","hashOfConfig":"13"},{"size":954,"mtime":1655069176078,"results":"18","hashOfConfig":"13"},{"size":2741,"mtime":1655062063094,"results":"19","hashOfConfig":"13"},{"size":5497,"mtime":1655069280492,"results":"20","hashOfConfig":"13"},{"size":6504,"mtime":1654723789695,"results":"21","hashOfConfig":"13"},{"size":2198,"mtime":1655066799483,"results":"22","hashOfConfig":"13"},{"size":2296,"mtime":1655072156541,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l605c6",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\index.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\reportWebVitals.js",[],[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\App.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Login.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijenti.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Administracija.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenici.js",[],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Klijent.js",["59","60"],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\NovaOsoba.js",["61","62","63","64","65","66"],[],"import React from 'react';\r\nimport {useState} from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport $ from 'jquery'\r\n\r\nfunction NoviKlijent(){\r\n\r\n    const [inputs, setInputs] = useState({});\r\n    const navigate = useNavigate();\r\n    const { IdOsoba } = useParams();\r\n\r\n    var requestId;\r\n    var route;\r\n    if(IdOsoba=='klijent'){\r\n        requestId='Upisi_novog_klijenta';\r\n        route='klijenti';\r\n    }else{\r\n        requestId='Upisi_novog_zaposlenika';\r\n        route='zaposlenici';\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        var validation = true;\r\n        var reg = /^\\d+$/\r\n        if(!($('#telefon').val().length == 10 && reg.test($('#telefon').val()))){\r\n            $('#telefon').attr('class','form-control is-invalid');\r\n            validation=false; \r\n        }else{\r\n            $('#telefon').attr('class','form-control is-valid');\r\n        }\r\n        if(!ProvjeraOIBa(inputs.OIB || 0)){\r\n            $('#oib').attr('class','form-control is-invalid');\r\n            validation=false; \r\n        }else{\r\n            $('#oib').attr('class','form-control is-valid');\r\n        }\r\n        if(!validation)return;\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost/KV/bankovnisustav/src/PHP/ReadWrite.php',\r\n            data: {\r\n                RequestId: requestId,\r\n                OIB: inputs.OIB,\r\n                Ime: inputs.Ime,\r\n                Prezime: inputs.Prezime,\r\n                Adresa: inputs.Adresa,\r\n                Telefon: inputs.Telefon,\r\n                Spol: inputs.Spol\r\n            },\r\n            headers: { \r\n                \"Content-Type\": \"multipart/form-data\",\r\n            } ,\r\n        }).then(function (response) {\r\n            //handle success\r\n            console.log(response.data);\r\n            console.log(response);\r\n            navigate('/administracija/'+route);\r\n          }).catch(function (response) {\r\n            //handle error\r\n            console.log(response);\r\n          });\r\n\r\n    }\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setInputs(values => ({...values, [name]: value}))\r\n    }\r\n    return (\r\n        <div className='container mt-5'>\r\n        <form className='needs-validation' noValidate>\r\n            <div>\r\n            <label>Unesite OIB:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"OIB\"\r\n            id=\"oib\"\r\n            value={inputs.OIB || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n            <div className=\"invalid-feedback mb-3\">\r\n                OIB je neispravan.\r\n            </div>\r\n            </div>\r\n            <label>Unesite Ime:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Ime\"\r\n            value={inputs.Ime || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Prezime:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Prezime\"\r\n            value={inputs.Prezime || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Adresu:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Adresa\"\r\n            value={inputs.Adresa || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <label>Unesite Telefon:</label>\r\n            <div>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Telefon\"\r\n            id=\"telefon\"\r\n            value={inputs.Telefon || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n            />\r\n            <div className=\"invalid-feedback mb-3\">\r\n                Unesite ispravan broj mobitela(10 brojeva).\r\n            </div>\r\n            </div>\r\n            <label>Unesite Spol:</label>\r\n            <input\r\n            className=\"form-control mb-3\"\r\n            type=\"text\"\r\n            name=\"Spol\"\r\n            value={inputs.Spol || \"\"}\r\n            onChange={handleChange}\r\n            />\r\n            <button className='btn btn-success' onClick={handleSubmit}>Dodaj novog klijenta</button>\r\n        </form>\r\n        </div>);\r\n\r\n}\r\n\r\n//provjera ispravnosti oib-a\r\nfunction ProvjeraOIBa(OIB){\r\n\t// OIB ima 11 znamenaka i mora biti numeric.\r\n\tif(OIB.length!=11 && Number.isInteger(parseInt(OIB))){\r\n\t\treturn false;\r\n\t}\r\n\t// Posljednja tj. 11. znamenka je kontrolna znamenka. Dobivena  je\r\n    // izračunom  iz  prethodnih  10  znamenaka  po međunarodnoj  normi  ISO 7064 (MOD 11, 10).\r\n    // Prva znamenka zbroji se s brojem 10. U sljedećim koracima to će biti ostatak koji će se zbrajati\r\n    // s idućom znamenkom.\r\n\tvar ostatak = 10;\r\n\t// Prođi kroz sve znamenke, osim zadnje.\r\n\tfor(var i=0; i<10;i++){\r\n\t\t// Dohvati trenutni znak iz OIBa i castaj ga u int kako bismo mogli raditi operacije.\r\n\t\tvar ternutnaZanmenka = parseInt(OIB[i]);\r\n\t\t// 1. Prva znamenka zbroji se s brojem 10, a svaka sljedeća s ostatkom u prethodnom koraku.\r\n\t\tvar zbroj = ternutnaZanmenka + ostatak;\r\n\t\t// 2. Dobiveni  zbroj  cjelobrojno  (s  ostatkom)  podijeli  se  brojem  10;  ako  je  dobiveni\r\n        // ostatak 0 zamijeni se brojem 10 (ovaj broj je tzv. međuostatak)\r\n\t\tvar meduOstatak = zbroj % 10;\r\n\t\tif(meduOstatak==0){\r\n\t\t\tmeduOstatak=10;\r\n\t\t}\r\n\t\t// 3. Dobiveni međuostatak pomnoži se brojem 2\r\n\t\tvar umnozak=meduOstatak*2;\r\n\t\t// 4. Dobiveni  umnožak  cjelobrojno  (s  ostatkom)  podijeli se  brojem  11;  ovaj  ostatak\r\n        // matematički nikako ne može biti 0 jer je rezultat prethodnog koraka uvijek paran broj\r\n\t\tostatak = umnozak % 11;\r\n\t\t// 5. Slijedeća znamenka zbroji se s ostatkom u prethodnom koraku...\r\n        // 6. Ponavljaju se koraci 2, 3, 4 i 5  dok se ne potroše sve znamenke...\r\n\t}\r\n\tvar kontrolnaZnamenka;\r\n\t// 7. Razlika izmeñu broja 11 i ostatka u zadnjem koraku je kontrolna znamenka.\r\n    // Ako je ostatak 1 kontrolna znamenka je 0 (11 1=10, a 10 ima dvije znamenke)\r\n\tif(ostatak==1){\r\n\t\tkontrolnaZnamenka=0;\r\n\t}else{\r\n\t\tkontrolnaZnamenka=11-ostatak;\r\n\t}\r\n\t// Provjeri dali kontrolne znamenka odgovara onoj u OIBu\r\n\tif(parseInt(OIB[10])==kontrolnaZnamenka){\r\n\t\treturn true;\r\n\t}\r\n\t// Ako smo došli tu, kontrola nije prošla.\r\n\treturn false;\r\n}\r\nexport default NoviKlijent;","C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Zaposlenik.js",["67"],[],"C:\\wamp64\\www\\KV\\bankovnisustav\\src\\routes\\Racuni.js",["68"],[],{"ruleId":"69","severity":1,"message":"70","line":37,"column":12,"nodeType":"71","endLine":37,"endColumn":14,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":153,"column":7,"nodeType":"71","endLine":153,"endColumn":9,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":15,"column":15,"nodeType":"77","messageId":"78","endLine":15,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":26,"column":41,"nodeType":"77","messageId":"78","endLine":26,"endColumn":43},{"ruleId":"75","severity":1,"message":"79","line":144,"column":15,"nodeType":"77","messageId":"78","endLine":144,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":161,"column":17,"nodeType":"77","messageId":"78","endLine":161,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":175,"column":12,"nodeType":"77","messageId":"78","endLine":175,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":181,"column":22,"nodeType":"77","messageId":"78","endLine":181,"endColumn":24},{"ruleId":"69","severity":1,"message":"80","line":31,"column":12,"nodeType":"71","endLine":31,"endColumn":14,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":40,"column":13,"nodeType":"84","messageId":"85","endLine":40,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'KlijentID'. Either include it or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has a missing dependency: 'props.sifra'. Either include it or remove the dependency array.",["87"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'ZaposlenikID'. Either include it or remove the dependency array.",["88"],"no-unused-vars","'i' is assigned a value but never used.","Identifier","unusedVar",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [KlijentID]",{"range":"95","text":"96"},"Update the dependencies array to be: [props.sifra]",{"range":"97","text":"98"},"Update the dependencies array to be: [ZaposlenikID]",{"range":"99","text":"100"},[1243,1245],"[KlijentID]",[5197,5199],"[props.sifra]",[954,956],"[ZaposlenikID]"]
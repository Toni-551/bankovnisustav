{"ast":null,"code":"/**\n * @internal\n *\n * This is the sort function used in the uncontrolled table mode.\n */\nexport function sortData(data, sortedProp, sortValueObj) {\n  const sortedData = [...data];\n  const {\n    prop,\n    order\n  } = sortedProp;\n  const sortMultiplier = order === 'asc' ? 1 : -1;\n  const sortFn = sortValueObj === null || sortValueObj === void 0 ? void 0 : sortValueObj[prop];\n  sortedData.sort((a, b) => {\n    let quantifiedValue1 = a[prop];\n    let quantifiedValue2 = b[prop];\n\n    if (sortFn) {\n      quantifiedValue1 = sortFn(quantifiedValue1);\n      quantifiedValue2 = sortFn(quantifiedValue2);\n    }\n\n    if (quantifiedValue1 < quantifiedValue2) {\n      return -1 * sortMultiplier;\n    } else if (quantifiedValue1 > quantifiedValue2) {\n      return 1 * sortMultiplier;\n    }\n\n    return 0;\n  });\n  return sortedData;\n}\n/**\n * @internal\n *\n * This is the filter function used in the uncontrolled table mode.\n */\n\nexport function filterData(data, headers, filterText) {\n  if (filterText === '') {\n    return data;\n  }\n\n  const lowercased = filterText.toLowerCase();\n  return data.filter(element => {\n    let isElementIncluded = false;\n\n    for (const key in headers) {\n      const header = headers[key];\n\n      if (header.isFilterable) {\n        let columnValue = element[header.prop]; // Only process non-null values.\n\n        if (columnValue !== null && columnValue !== undefined) {\n          if (typeof columnValue !== 'string') {\n            // Convert to string if it is not a string.\n            columnValue = columnValue.toString();\n          }\n\n          columnValue = columnValue.toLowerCase();\n          isElementIncluded = columnValue.includes(lowercased);\n\n          if (isElementIncluded) {\n            break;\n          }\n        }\n      }\n    }\n\n    return isElementIncluded;\n  });\n}\n/**\n * @internal\n *\n * This is the paginate function used in the uncontrolled table mode.\n */\n\nexport function paginateData(data, currentPage, rowsPerPage) {\n  let paginatedData = [...data];\n\n  if (rowsPerPage !== undefined) {\n    const startRow = (currentPage - 1) * rowsPerPage;\n    const endRow = currentPage * rowsPerPage;\n    paginatedData = data.slice(startRow, endRow);\n  }\n\n  return paginatedData;\n}\n/**\n * @internal\n *\n * This is a helper function to get the next sort state.\n */\n\nexport function getNextSortState(oldSort, sortedProp) {\n  const nextSort = {\n    order: 'asc',\n    prop: sortedProp\n  };\n\n  if (sortedProp === oldSort.prop) {\n    nextSort.order = oldSort.order === 'asc' ? 'desc' : 'asc';\n  }\n\n  return nextSort;\n}","map":{"version":3,"names":["sortData","data","sortedProp","sortValueObj","sortedData","prop","order","sortMultiplier","sortFn","sort","a","b","quantifiedValue1","quantifiedValue2","filterData","headers","filterText","lowercased","toLowerCase","filter","element","isElementIncluded","key","header","isFilterable","columnValue","undefined","toString","includes","paginateData","currentPage","rowsPerPage","paginatedData","startRow","endRow","slice","getNextSortState","oldSort","nextSort"],"sources":["C:/wamp64/www/KV/bankovnisustav/node_modules/react-bs-datatable/lib/esm/helpers/data.js"],"sourcesContent":["/**\n * @internal\n *\n * This is the sort function used in the uncontrolled table mode.\n */\nexport function sortData(data, sortedProp, sortValueObj) {\n    const sortedData = [...data];\n    const { prop, order } = sortedProp;\n    const sortMultiplier = order === 'asc' ? 1 : -1;\n    const sortFn = sortValueObj === null || sortValueObj === void 0 ? void 0 : sortValueObj[prop];\n    sortedData.sort((a, b) => {\n        let quantifiedValue1 = a[prop];\n        let quantifiedValue2 = b[prop];\n        if (sortFn) {\n            quantifiedValue1 = sortFn(quantifiedValue1);\n            quantifiedValue2 = sortFn(quantifiedValue2);\n        }\n        if (quantifiedValue1 < quantifiedValue2) {\n            return -1 * sortMultiplier;\n        }\n        else if (quantifiedValue1 > quantifiedValue2) {\n            return 1 * sortMultiplier;\n        }\n        return 0;\n    });\n    return sortedData;\n}\n/**\n * @internal\n *\n * This is the filter function used in the uncontrolled table mode.\n */\nexport function filterData(data, headers, filterText) {\n    if (filterText === '') {\n        return data;\n    }\n    const lowercased = filterText.toLowerCase();\n    return data.filter((element) => {\n        let isElementIncluded = false;\n        for (const key in headers) {\n            const header = headers[key];\n            if (header.isFilterable) {\n                let columnValue = element[header.prop];\n                // Only process non-null values.\n                if (columnValue !== null && columnValue !== undefined) {\n                    if (typeof columnValue !== 'string') {\n                        // Convert to string if it is not a string.\n                        columnValue = columnValue.toString();\n                    }\n                    columnValue = columnValue.toLowerCase();\n                    isElementIncluded = columnValue.includes(lowercased);\n                    if (isElementIncluded) {\n                        break;\n                    }\n                }\n            }\n        }\n        return isElementIncluded;\n    });\n}\n/**\n * @internal\n *\n * This is the paginate function used in the uncontrolled table mode.\n */\nexport function paginateData(data, currentPage, rowsPerPage) {\n    let paginatedData = [...data];\n    if (rowsPerPage !== undefined) {\n        const startRow = (currentPage - 1) * rowsPerPage;\n        const endRow = currentPage * rowsPerPage;\n        paginatedData = data.slice(startRow, endRow);\n    }\n    return paginatedData;\n}\n/**\n * @internal\n *\n * This is a helper function to get the next sort state.\n */\nexport function getNextSortState(oldSort, sortedProp) {\n    const nextSort = { order: 'asc', prop: sortedProp };\n    if (sortedProp === oldSort.prop) {\n        nextSort.order = oldSort.order === 'asc' ? 'desc' : 'asc';\n    }\n    return nextSort;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
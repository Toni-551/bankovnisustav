{"ast":null,"code":"/**\n * @internal\n *\n * This is a function to create a `className` string prop given\n * a list of arguments. Inspired by the `classnames` library.\n */\nexport function makeClasses() {\n  const classes = [];\n\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = i < 0 || arguments.length <= i ? undefined : arguments[i];\n    if (!arg) continue; // String.\n\n    if (typeof arg === 'string') {\n      classes.push(arg);\n      continue;\n    } // Dictionary.\n\n\n    for (const key in arg) {\n      if (arg[key]) {\n        classes.push(key);\n      }\n    }\n  }\n\n  return classes.join(' ');\n}\n/**\n * @internal\n *\n * This function converts an array to record, just for utility purposes.\n */\n\nexport function convertArrayToRecord(array, propId) {\n  const record = {};\n\n  for (const element of array) {\n    record[element[propId]] = element;\n  }\n\n  return record;\n}","map":{"version":3,"names":["makeClasses","classes","i","length","arg","push","key","join","convertArrayToRecord","array","propId","record","element"],"sources":["C:/wamp64/www/KV/bankovnisustav/node_modules/react-bs-datatable/lib/esm/helpers/object.js"],"sourcesContent":["/**\n * @internal\n *\n * This is a function to create a `className` string prop given\n * a list of arguments. Inspired by the `classnames` library.\n */\nexport function makeClasses(...args) {\n    const classes = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (!arg)\n            continue;\n        // String.\n        if (typeof arg === 'string') {\n            classes.push(arg);\n            continue;\n        }\n        // Dictionary.\n        for (const key in arg) {\n            if (arg[key]) {\n                classes.push(key);\n            }\n        }\n    }\n    return classes.join(' ');\n}\n/**\n * @internal\n *\n * This function converts an array to record, just for utility purposes.\n */\nexport function convertArrayToRecord(array, propId) {\n    const record = {};\n    for (const element of array) {\n        record[element[propId]] = element;\n    }\n    return record;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAT,GAA8B;EACjC,MAAMC,OAAO,GAAG,EAAhB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,UAAKC,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;IAClC,MAAME,GAAG,GAAQF,CAAR,4BAAQA,CAAR,yBAAQA,CAAR,CAAT;IACA,IAAI,CAACE,GAAL,EACI,SAH8B,CAIlC;;IACA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MACzBH,OAAO,CAACI,IAAR,CAAaD,GAAb;MACA;IACH,CARiC,CASlC;;;IACA,KAAK,MAAME,GAAX,IAAkBF,GAAlB,EAAuB;MACnB,IAAIA,GAAG,CAACE,GAAD,CAAP,EAAc;QACVL,OAAO,CAACI,IAAR,CAAaC,GAAb;MACH;IACJ;EACJ;;EACD,OAAOL,OAAO,CAACM,IAAR,CAAa,GAAb,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;EAChD,MAAMC,MAAM,GAAG,EAAf;;EACA,KAAK,MAAMC,OAAX,IAAsBH,KAAtB,EAA6B;IACzBE,MAAM,CAACC,OAAO,CAACF,MAAD,CAAR,CAAN,GAA0BE,OAA1B;EACH;;EACD,OAAOD,MAAP;AACH"},"metadata":{},"sourceType":"module"}
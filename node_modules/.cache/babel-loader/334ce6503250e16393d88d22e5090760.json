{"ast":null,"code":"import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { makeClasses } from '../helpers/object';\nimport { useDatatableWrapper } from './DatatableWrapper';\n/**\n * Renders a control for the pagination options. It will show a form group, consisting of\n * a select input, as well as a label/text before and after the input. By default,\n * it renders \"Rows per page\" as a label, which refers to the select input. There is no\n * text after the select input, unless specified in the `labels.afterSelect` prop.\n *\n * The options available in the select input are the ones specified from the `DatatableWrapper`,\n * or the ones passed in this component's prop `controlledProps.rowsPerPageOptions`.\n *\n * When `alwaysShowPagination` is set to `false`, then this component will be visually hidden.\n */\n\nexport function PaginationOptions(_ref) {\n  let {\n    labels,\n    classes,\n    alwaysShowPagination = true,\n    controlledProps\n  } = _ref;\n  const {\n    onRowsPerPageChange: onRowsPerPageChangeContext,\n    rowsPerPageOptions: rowsPerPageOptionsContext,\n    rowsPerPageState: rowsPerPageStateContext,\n    filteredDataLength: filteredDataLengthContext\n  } = useDatatableWrapper(); // Controlled has the bigger priority.\n\n  const rowsPerPageOptions = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.rowsPerPageOptions) || rowsPerPageOptionsContext;\n  const rowsPerPageState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.rowsPerPage) || rowsPerPageStateContext;\n  const filteredDataLength = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filteredDataLength) || filteredDataLengthContext;\n  const onRowsPerPageChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onRowsPerPageChange) || onRowsPerPageChangeContext; // Hide pagination if pagination is meant to not always be shown or\n  // if the filtered data length is less than the minimum rows per page option.\n\n  const hidePaginationOptions = !alwaysShowPagination && filteredDataLength <= Math.min(...rowsPerPageOptions);\n  return React.createElement(Form.Group, {\n    controlId: \"formGroupPagination\",\n    className: makeClasses('paginationOpts__root', classes === null || classes === void 0 ? void 0 : classes.formGroup, {\n      invisible: hidePaginationOptions\n    })\n  }, React.createElement(Form.Label, {\n    className: classes === null || classes === void 0 ? void 0 : classes.formText\n  }, (labels === null || labels === void 0 ? void 0 : labels.beforeSelect) || 'Rows per page'), React.createElement(Form.Select, {\n    name: \"table-pagination-options\",\n    value: rowsPerPageState,\n    as: \"select\",\n    placeholder: \"select\",\n    onChange: e => onRowsPerPageChange(Number(e.target.value)),\n    className: classes === null || classes === void 0 ? void 0 : classes.formControl\n  }, rowsPerPageOptions.map(option => {\n    const optionProps = {\n      key: `page-opt-${option}`,\n      value: option\n    };\n    return React.createElement(\"option\", Object.assign({}, optionProps), option);\n  })), (labels === null || labels === void 0 ? void 0 : labels.afterSelect) && React.createElement(Form.Text, {\n    className: classes === null || classes === void 0 ? void 0 : classes.formText\n  }, labels === null || labels === void 0 ? void 0 : labels.afterSelect));\n}","map":{"version":3,"names":["React","Form","makeClasses","useDatatableWrapper","PaginationOptions","labels","classes","alwaysShowPagination","controlledProps","onRowsPerPageChange","onRowsPerPageChangeContext","rowsPerPageOptions","rowsPerPageOptionsContext","rowsPerPageState","rowsPerPageStateContext","filteredDataLength","filteredDataLengthContext","rowsPerPage","hidePaginationOptions","Math","min","createElement","Group","controlId","className","formGroup","invisible","Label","formText","beforeSelect","Select","name","value","as","placeholder","onChange","e","Number","target","formControl","map","option","optionProps","key","Object","assign","afterSelect","Text"],"sources":["C:/wamp64/www/KV/bankovnisustav/node_modules/react-bs-datatable/lib/esm/components/PaginationOptions.js"],"sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { makeClasses } from '../helpers/object';\nimport { useDatatableWrapper } from './DatatableWrapper';\n/**\n * Renders a control for the pagination options. It will show a form group, consisting of\n * a select input, as well as a label/text before and after the input. By default,\n * it renders \"Rows per page\" as a label, which refers to the select input. There is no\n * text after the select input, unless specified in the `labels.afterSelect` prop.\n *\n * The options available in the select input are the ones specified from the `DatatableWrapper`,\n * or the ones passed in this component's prop `controlledProps.rowsPerPageOptions`.\n *\n * When `alwaysShowPagination` is set to `false`, then this component will be visually hidden.\n */\nexport function PaginationOptions({ labels, classes, alwaysShowPagination = true, controlledProps }) {\n    const { onRowsPerPageChange: onRowsPerPageChangeContext, rowsPerPageOptions: rowsPerPageOptionsContext, rowsPerPageState: rowsPerPageStateContext, filteredDataLength: filteredDataLengthContext } = useDatatableWrapper();\n    // Controlled has the bigger priority.\n    const rowsPerPageOptions = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.rowsPerPageOptions) || rowsPerPageOptionsContext;\n    const rowsPerPageState = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.rowsPerPage) || rowsPerPageStateContext;\n    const filteredDataLength = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.filteredDataLength) || filteredDataLengthContext;\n    const onRowsPerPageChange = (controlledProps === null || controlledProps === void 0 ? void 0 : controlledProps.onRowsPerPageChange) || onRowsPerPageChangeContext;\n    // Hide pagination if pagination is meant to not always be shown or\n    // if the filtered data length is less than the minimum rows per page option.\n    const hidePaginationOptions = !alwaysShowPagination &&\n        filteredDataLength <= Math.min(...rowsPerPageOptions);\n    return (React.createElement(Form.Group, { controlId: \"formGroupPagination\", className: makeClasses('paginationOpts__root', classes === null || classes === void 0 ? void 0 : classes.formGroup, {\n            invisible: hidePaginationOptions\n        }) },\n        React.createElement(Form.Label, { className: classes === null || classes === void 0 ? void 0 : classes.formText }, (labels === null || labels === void 0 ? void 0 : labels.beforeSelect) || 'Rows per page'),\n        React.createElement(Form.Select, { name: \"table-pagination-options\", value: rowsPerPageState, as: \"select\", placeholder: \"select\", onChange: (e) => onRowsPerPageChange(Number(e.target.value)), className: classes === null || classes === void 0 ? void 0 : classes.formControl }, rowsPerPageOptions.map((option) => {\n            const optionProps = {\n                key: `page-opt-${option}`,\n                value: option\n            };\n            return React.createElement(\"option\", Object.assign({}, optionProps), option);\n        })),\n        (labels === null || labels === void 0 ? void 0 : labels.afterSelect) && (React.createElement(Form.Text, { className: classes === null || classes === void 0 ? void 0 : classes.formText }, labels === null || labels === void 0 ? void 0 : labels.afterSelect))));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}